#!/usr/bin/env bash

# shellcheck disable=SC2162
# shellcheck disable=SC2034
# shellcheck disable=SC2010
# shellcheck disable=SC2035

echo "Where do you want to make a new project?"
echo "Existing directories:"
ls -d */ 2>/dev/null | grep -v '^\.'
read -p "Print a name of directory (new one or one of existing) or Here(here): " answer

if [ "$answer" != "Here" ] && [ "$answer" != "here" ]; then
    if [ ! -d "$answer" ]; then
        mkdir ./"$answer"
        mkdir ./"$answer"/.scripts
        cp -r ./.scripts ./"$answer"
        touch ./"$answer"/.new_folder
        touch ./"$answer"/.new_file
        touch ./"$answer"/.new_project
        touch ./"$answer"/.make_copies_of_scripts

        cat ./"$answer"/.scripts/.new_folder >./"$answer"/.new_folder
        cat ./"$answer"/.scripts/.new_file >./"$answer"/.new_file
        cat ./"$answer"/.scripts/.new_project >./"$answer"/.new_project
        cat ./"$answer"/.scripts/.make_copies_of_scripts >./"$answer"/.make_copies_of_scripts

        chmod +x ./"$answer"/.new_folder
        chmod +x ./"$answer"/.new_file
        chmod +x ./"$answer"/.new_project
        chmod +x ./"$answer"/.make_copies_of_scripts
    fi

    cd "$answer" || exit

    ./.new_project
else
    touch ./.clone_git
    cat ./.scripts/.clone_git >./.clone_git
    chmod +x ./.clone_git
    echo "Do you wanna clone your project from github?"
    echo "You can do it later by runing ./.clone_git"
    read -p "Do you wanna clone your project from github? No(no, N, n) if not or ssh(https) of github project: " answer
    if [ "$answer" != "No" ] && [ "$answer" != "no" ] && [ "$answer" != "n" ] && [ "$answer" != "N" ]; then
        ./.clone_git "$answer"
    else
        echo "What will be the name of project"
        echo "Existing directories:"
        ls -d */ 2>/dev/null | grep -v '^\.'
        read -p "What will be the name of project (new one or one of existing): " answer
        if [ ! -d "$answer" ]; then
            mkdir ./"$answer"
            mkdir ./"$answer"/.scripts
            cp -r ./.scripts ./"$answer"
            touch ./"$answer"/.new_folder
            touch ./"$answer"/.new_file
            touch ./"$answer"/.new_project
            touch ./"$answer"/.make_copies_of_scripts

            cat ./"$answer"/.scripts/.new_folder >./"$answer"/.new_folder
            cat ./"$answer"/.scripts/.new_file >./"$answer"/.new_file
            cat ./"$answer"/.scripts/.new_project >./"$answer"/.new_project
            cat ./"$answer"/.scripts/.make_copies_of_scripts >./"$answer"/.make_copies_of_scripts

            chmod +x ./"$answer"/.new_folder
            chmod +x ./"$answer"/.new_file
            chmod +x ./"$answer"/.new_project
            chmod +x ./"$answer"/.make_copies_of_scripts
        fi

        cd "$answer" || exit
        answer2="$answer"

        touch ./.init_git
        cat ./.scripts/.init_git >./.init_git
        chmod +x ./.init_git
        touch ./.clone_git
        cat ./.scripts/.clone_git >./.clone_git
        chmod +x ./.clone_git

        echo "Do you wanna make git repository?"

        echo "You can do it later by runing ./.init_git"

        read -p "Do you wanna make git repository? Y(y, Yes, yes) if yes, N(n, No, no) if no: " answer
        while [ "$answer" != "No" ] && [ "$answer" != "no" ] && [ "$answer" != "N" ] && [ "$answer" != "n" ] && [ "$answer" != "Yes" ] && [ "$answer" != "yes" ] && [ "$answer" != "Y" ] && [ "$answer" != "y" ]; do
            read -p "Do you wanna make git repository? Y(y, Yes, yes) if yes, N(n, No, no) if no: " answer
        done

        if [ "$answer" != "No" ] && [ "$answer" != "no" ] && [ "$answer" != "N" ] && [ "$answer" != "n" ]; then
            ./.init_git
        fi
    fi

    if ! [ -f ./README.md ]; then
        read -p "Do you wanna make README.md file? Y(y, Yes, yes) if yes, N(n, No, no) if no: " answer
        while [ "$answer" != "No" ] && [ "$answer" != "no" ] && [ "$answer" != "N" ] && [ "$answer" != "n" ] && [ "$answer" != "Yes" ] && [ "$answer" != "yes" ] && [ "$answer" != "Y" ] && [ "$answer" != "y" ]; do
            read -p "Do you wanna make README.md file? Y(y, Yes, yes) if yes, N(n, No, no) if no: " answer
        done

        if [ "$answer" != "No" ] && [ "$answer" != "no" ] && [ "$answer" != "N" ] && [ "$answer" != "n" ]; then
            touch README.md
            echo "# $answer2" >README.md
        fi
    fi

    echo "What programing language you will use in your project:"
    echo "1) Empty project"
    echo "2) BASH"
    echo "3) Python"
    read -p "[1-3]: " answer
    while [ "$answer" -lt 1 ] || [ "$answer" -gt 3 ]; do
        read -p "[1-3]: " answer
    done

    if [ "$answer" = 2 ]; then
        touch main
        chmod +x ./main
        echo "#!/usr/bin/env bash" >main
    fi

    if [ "$answer" = 3 ]; then
        chmod +x ./.scripts/.scripts_for_python/.new_project
        ./.scripts/.scripts_for_python/.new_project
    fi
fi

echo "lets make file:"
./.new_file
