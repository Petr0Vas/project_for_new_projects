#!/usr/bin/env bash
# shellcheck disable=SC2162
# shellcheck disable=SC2034
read -p "Where do you want to make a new project? Print a name of directory or Here(Here): " answer

while [ "$answer" != "Here" ] && [ "$answer" != "here" ]; do
    if ! [ -d "$answer" ]; then
        mkdir ./"$answer"
        mkdir ./"$answer"/.scripts
        cp -r ./.scripts ./"$answer"
        touch ./"$answer"/.new_folder
        touch ./"$answer"/.new_file
        touch ./"$answer"/.new_project
        touch ./"$answer"/.make_copies_of_scripts

        cat ./"$answer"/.scripts/.new_folder >./"$answer"/.new_folder
        cat ./"$answer"/.scripts/.new_file >./"$answer"/.new_file
        cat ./"$answer"/.scripts/.new_project >./"$answer"/.new_project
        cat ./"$answer"/.scripts/.make_copies_of_scripts >./"$answer"/.make_copies_of_scripts

        chmod +x ./"$answer"/.new_folder
        chmod +x ./"$answer"/.new_file
        chmod +x ./"$answer"/.new_project
        chmod +x ./"$answer"/.make_copies_of_scripts
    fi

    cd "$answer" || exit
done

# --------make-a-new-script-for-githab-repo-and-run-it-here--------

read -p "do you wanna clone it from github? No(no) if not or ssh (https) of github project: " answer
if [ "$answer" != "No" ] && [ "$answer" != "no" ]; then
    git clone "$answer"
    tmp="${answer#*/}"
    answer2="${tmp%.*}"
    mkdir ./"$answer2"/.scripts
    cp -r ./.scripts ./"$answer2"
    touch ./"$answer2"/.new_folder
    touch ./"$answer2"/.new_file
    touch ./"$answer2"/.new_project
    touch ./"$answer2"/.make_copies_of_scripts

    cat ./"$answer2"/.scripts/.new_folder >./"$answer2"/.new_folder
    cat ./"$answer2"/.scripts/.new_file >./"$answer2"/.new_file
    cat ./"$answer2"/.scripts/.new_project >./"$answer2"/.new_project
    cat ./"$answer2"/.scripts/.make_copies_of_scripts >./"$answer2"/.make_copies_of_scripts

    chmod +x ./"$answer2"/.new_folder
    chmod +x ./"$answer2"/.new_file
    chmod +x ./"$answer2"/.new_project
    chmod +x ./"$answer2"/.make_copies_of_scripts
    cd answer2 || exit
    git init
    git branch -M main
    git remote add origin "$answer"
    # add scripts to work whith github
else

    read -p "What will be the name of project: " answer

    if ! [ -d "$answer" ]; then
        mkdir ./"$answer"
        mkdir ./"$answer"/.scripts
        cp -r ./.scripts ./"$answer"
        touch ./"$answer"/.new_folder
        touch ./"$answer"/.new_file
        touch ./"$answer"/.new_project
        touch ./"$answer"/.make_copies_of_scripts

        cat ./"$answer"/.scripts/.new_folder >./"$answer"/.new_folder
        cat ./"$answer"/.scripts/.new_file >./"$answer"/.new_file
        cat ./"$answer"/.scripts/.new_project >./"$answer"/.new_project
        cat ./"$answer"/.scripts/.make_copies_of_scripts >./"$answer"/.make_copies_of_scripts

        chmod +x ./"$answer"/.new_folder
        chmod +x ./"$answer"/.new_file
        chmod +x ./"$answer"/.new_project
        chmod +x ./"$answer"/.make_copies_of_scripts
    fi

    cd "$answer" || exit
    answer2="$answer"
    # ---------make-a-new-script-for-git-repo-and-run-it-here----------
    read -p "Do you wanna make git repository? Y(y, Yes, yes) if yes, N(n, No, no) if no: " answer
    while [ "$answer" != "No" ] && [ "$answer" != "no" ] && [ "$answer" != "N" ] && [ "$answer" != "n" ] && [ "$answer" != "Yes" ] && [ "$answer" != "yes" ] && [ "$answer" != "Y" ] && [ "$answer" != "y" ]; do
        read -p "Do you wanna make git repository? Y(y, Yes, yes) if yes, N(n, No, no) if no: " answer
    done

    if [ "$answer" != "No" ] && [ "$answer" != "no" ] && [ "$answer" != "N" ] && [ "$answer" != "n" ]; then
        git init
        # add all scripts in gitignore
        # add scripts to work whith git
    fi
fi
# -----------------------------------------------------------------

# -----------------------------------------------------------------
if ! [ -f ./README.md ]; then
    read -p "Do you wanna make README.md file? Y(y, Yes, yes) if yes, N(n, No, no) if no: " answer
    while [ "$answer" != "No" ] && [ "$answer" != "no" ] && [ "$answer" != "N" ] && [ "$answer" != "n" ] && [ "$answer" != "Yes" ] && [ "$answer" != "yes" ] && [ "$answer" != "Y" ] && [ "$answer" != "y" ]; do
        read -p "Do you wanna make README.md file? Y(y, Yes, yes) if yes, N(n, No, no) if no: " answer
    done

    if [ "$answer" != "No" ] && [ "$answer" != "no" ] && [ "$answer" != "N" ] && [ "$answer" != "n" ]; then
        touch README.md
        echo "# $answer2" > README.md
    fi
fi

# --------make-a-new-script-for-chosing-language-of-project-and-run-it-here--------
echo "What language of project you will use in your project:"
echo "1) empty project"
echo "2) bash"
echo "3) Python"
read -p "[1-3]: " answer 
while "$answer" <= 1 || "$answer" >= 3
do
    read -p "[1-3]: " answer    
done

if [ "$answer" = 2 ]
then
    touch main
    chmod +x ./main
    echo "#!/usr/bin/env bash" > main
fi

if [ "$answer" = 3 ]
then
    chmod +x ./.scripts/.scripts_for_python/.new_project
    ./.scripts/.scripts_for_python/.new_project 
fi

# ---------------------------------------------------------------------------------